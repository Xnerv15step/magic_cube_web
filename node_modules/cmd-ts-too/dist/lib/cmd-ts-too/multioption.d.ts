import type { ArgParser, Register } from "./argparser";
import type { Default } from "./default";
import type { OutputOf } from "./from";
import type { Descriptive, LongDoc, ProvidesHelp, ShortDoc } from "./helpdoc";
import type { HasType, Type } from "./type";
type MultiOptionConfig<Decoder extends Type<string[], any>> = HasType<Decoder> & LongDoc & Partial<ShortDoc & Descriptive & Default<OutputOf<Decoder>>>;
/**
 * Like `option`, but can accept multiple options, and expects a decoder from a list of strings.
 * An error will highlight all option occurences.
 */
export declare function multioption<Decoder extends Type<string[], any>>(config: MultiOptionConfig<Decoder>): ArgParser<OutputOf<Decoder>> & ProvidesHelp & Register;
export {};
